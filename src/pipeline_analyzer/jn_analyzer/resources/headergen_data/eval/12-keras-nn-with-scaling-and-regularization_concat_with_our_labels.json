{
    "source": [
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "import tensorflow as tf",
                "import pandas as pd",
                "import os",
                "from sklearn.metrics import roc_auc_score",
                "from sklearn.model_selection import train_test_split",
                "from sklearn.preprocessing import StandardScaler",
                "from keras import Sequential",
                "from keras import layers",
                "from keras import backend as K",
                "from keras.layers.core import Dense",
                "from keras import regularizers",
                "from keras.layers import Dropout",
                "from keras.constraints import max_norm"
            ],
            "content_processed": [
                "SETUP"
            ],
            "tag_pred": [
                "setup_notebook"
            ],
            "correct_tag_ours": [
                "setup_notebook"
            ],
            "headergen_tag": [
                "Library Loading"
            ],
            "headergen_sot": [
                "Library Loading"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "# Import data",
                "train = pd.read_csv('../input/train.csv')",
                "test = pd.read_csv('../input/test.csv')"
            ],
            "content_processed": [
                "ASSIGN = pd.read_csv('..path')",
                "ASSIGN = pd.read_csv('..path')"
            ],
            "tag_pred": [
                "ingest_data"
            ],
            "correct_tag_ours": [
                "ingest_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "train.shape"
            ],
            "content_processed": [
                "VALIDATION",
                "train.shape"
            ],
            "tag_pred": [
                "validate_data"
            ],
            "correct_tag_ours": [
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "test.shape"
            ],
            "content_processed": [
                "VALIDATION",
                "test.shape"
            ],
            "tag_pred": [
                "validate_data"
            ],
            "correct_tag_ours": [
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "#Check num of cases in label ",
                "print(train.target.value_counts())",
                "print(train.target.value_counts()[1]/train.target.value_counts()[0])"
            ],
            "content_processed": [
                "VALIDATION",
                "print(train.target.value_counts())",
                "print(train.target.value_counts()[1]path()[0])"
            ],
            "tag_pred": [
                "validate_data"
            ],
            "correct_tag_ours": [
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "train_features = train.drop(['target', 'ID_code'], axis=1)",
                "train_targets = train['target']",
                "test_features = test.drop(['ID_code'], axis=1)"
            ],
            "content_processed": [
                "ASSIGN = train.drop(['target', 'ID_code'], axis=1)",
                "ASSIGN = train['target']",
                "ASSIGN = test.drop(['ID_code'], axis=1)"
            ],
            "tag_pred": [
                "process_data"
            ],
            "correct_tag_ours": [
                "process_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "X_train, X_test, y_train, y_test = train_test_split(train_features, train_targets, test_size = 0.25, random_state = 50)"
            ],
            "content_processed": [
                "X_train, X_test, y_train, y_test = train_test_split(train_features, train_targets, test_size = 0.25, random_state = 50)"
            ],
            "tag_pred": [
                "process_data"
            ],
            "correct_tag_ours": [
                "process_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "# Feature Scaling",
                "from sklearn.preprocessing import StandardScaler",
                "sc = StandardScaler()",
                "X_train = sc.fit_transform(X_train)",
                "X_test = sc.transform(X_test)",
                "test_features = sc.transform(test_features)"
            ],
            "content_processed": [
                "SETUP",
                "ASSIGN = StandardScaler()",
                "ASSIGN = sc.fit_transform(ASSIGN)",
                "ASSIGN = sc.transform(ASSIGN)",
                "ASSIGN = sc.transform(ASSIGN)"
            ],
            "tag_pred": [
                "setup_notebook",
                "process_data"
            ],
            "correct_tag_ours": [
                "setup_notebook",
                "process_data"
            ],
            "headergen_tag": [
                "Library Loading",
                "Feature Engineering"
            ],
            "headergen_sot": [
                "Library Loading",
                "Feature Engineering"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "# Add RUC metric to monitor NN",
                "def auc(y_true, y_pred):",
                "    auc = tf.metrics.auc(y_true, y_pred)[1]",
                "    K.get_session().run(tf.local_variables_initializer())",
                "    return auc"
            ],
            "content_processed": [
                "def auc(y_true, y_pred):",
                "ASSIGN = tf.metrics.ASSIGN(y_true, y_pred)[1]",
                "K.get_session().run(tf.local_variables_initializer())",
                "return auc"
            ],
            "tag_pred": [
                "process_data"
            ],
            "correct_tag_ours": [
                "evaluate_model"
            ],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "headergen_sot": [
                "Model Building and Training"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "input_dim = X_train.shape[1]",
                "input_dim"
            ],
            "content_processed": [
                "VALIDATION",
                "ASSIGN = X_train.shape[1]",
                "input_dim"
            ],
            "tag_pred": [
                "process_data",
                "train_model"
            ],
            "correct_tag_ours": [
                "process_data",
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "# Try early stopping",
                "#from keras.callbacks import EarlyStopping",
                "#callback = EarlyStopping(monitor='loss', min_delta=0, patience=10, verbose=0, mode='auto', baseline=None, restore_best_weights=True)"
            ],
            "content_processed": [],
            "tag_pred": [
                "None"
            ],
            "correct_tag_ours": [
                "None"
            ],
            "headergen_tag": [
                ""
            ],
            "headergen_sot": [
                ""
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "model = Sequential()",
                "# Input layer",
                "model.add(Dense(units = 200, activation = \"relu\", input_dim = input_dim, kernel_initializer = \"normal\", kernel_regularizer=regularizers.l2(0.005), ",
                "                kernel_constraint = max_norm(5.)))",
                "# Add dropout regularization",
                "model.add(Dropout(rate=0.2))",
                "",
                "# First hidden layer",
                "model.add(Dense(units = 200, activation='relu', kernel_regularizer=regularizers.l2(0.005), kernel_constraint=max_norm(5)))",
                "# Add dropout regularization",
                "model.add(Dropout(rate=0.1))",
                "",
                "# Second hidden layer",
                "model.add(Dense(100, activation='relu', kernel_regularizer=regularizers.l2(0.005), kernel_constraint=max_norm(5)))",
                "# Add dropout regularization",
                "model.add(Dropout(rate=0.1))",
                "",
                "# Third hidden layer",
                "model.add(Dense(50, activation='tanh', kernel_regularizer=regularizers.l2(0.005), kernel_constraint=max_norm(5)))",
                "# Add dropout regularization",
                "model.add(Dropout(rate=0.1))",
                "",
                "# Output layer",
                "model.add(layers.Dense(units = 1, activation='sigmoid'))",
                "",
                "model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy', auc])",
                "model.summary()"
            ],
            "content_processed": [
                "ASSIGN = Sequential()",
                "ASSIGN.add(Dense(units = 200, activation = \"relu\", input_dim = input_dim, kernel_initializer = \"normal\", kernel_regularizer=regularizers.l2(0.005),",
                "ASSIGN = max_norm(5.)))",
                "ASSIGN.add(Dropout(rate=0.2))",
                "ASSIGN.add(Dense(units = 200, activation='relu', kernel_regularizer=regularizers.l2(0.005), ASSIGN=max_norm(5)))",
                "ASSIGN.add(Dropout(rate=0.1))",
                "ASSIGN.add(Dense(100, activation='relu', kernel_regularizer=regularizers.l2(0.005), ASSIGN=max_norm(5)))",
                "ASSIGN.add(Dropout(rate=0.1))",
                "ASSIGN.add(Dense(50, activation='tanh', kernel_regularizer=regularizers.l2(0.005), ASSIGN=max_norm(5)))",
                "ASSIGN.add(Dropout(rate=0.1))",
                "ASSIGN.add(layers.Dense(units = 1, activation='sigmoid'))",
                "ASSIGN.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy', auc])",
                "ASSIGN.summary()"
            ],
            "tag_pred": [
                "train_model"
            ],
            "correct_tag_ours": [
                "train_model",
                "validate_data"
            ],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "headergen_sot": [
                "Model Building and Training"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "model.fit(X_train, y_train, batch_size = 16384, epochs = 125, validation_data = (X_test, y_test))#, callbacks = [callback])"
            ],
            "content_processed": [
                "model.fit(X_train, y_train, batch_size = 16384, epochs = 125, validation_data = (X_test, y_test))"
            ],
            "tag_pred": [
                "train_model"
            ],
            "correct_tag_ours": [
                "train_model"
            ],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "headergen_sot": [
                "Model Building and Training"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "y_pred = model.predict_proba(X_test)",
                "roc_auc_score(y_test, y_pred)"
            ],
            "content_processed": [
                "ASSIGN = model.predict_proba(X_test)",
                "roc_auc_score(y_test, ASSIGN)"
            ],
            "tag_pred": [
                "evaluate_model"
            ],
            "correct_tag_ours": [
                "evaluate_model"
            ],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "headergen_sot": [
                "Model Building and Training"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "id_code_test = test['ID_code']",
                "# Make predicitions",
                "pred = model.predict(test_features)",
                "pred_ = pred[:,0]"
            ],
            "content_processed": [
                "ASSIGN = test['ID_code']",
                "ASSIGN = model.predict(test_features)",
                "ASSIGN = pred[:,0]"
            ],
            "tag_pred": [
                "evaluate_model"
            ],
            "correct_tag_ours": [
                "evaluate_model"
            ],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "headergen_sot": [
                "Model Building and Training"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "pred_"
            ],
            "content_processed": [
                "pred_"
            ],
            "tag_pred": [
                "validate_data"
            ],
            "correct_tag_ours": [
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "# To CSV",
                "my_submission = pd.DataFrame({\"ID_code\" : id_code_test, \"target\" : pred_})"
            ],
            "content_processed": [
                "ASSIGN = pd.DataFrame({\"ID_code\" : id_code_test, \"target\" : pred_})"
            ],
            "tag_pred": [
                "process_data"
            ],
            "correct_tag_ours": [
                "process_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "my_submission"
            ],
            "content_processed": [
                "VALIDATION",
                "my_submission"
            ],
            "tag_pred": [
                "validate_data"
            ],
            "correct_tag_ours": [
                "validate_data"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                "my_submission.to_csv('submission.csv', index = False, header = True)"
            ],
            "content_processed": [
                "my_submission.to_csv('submission.csv', index = False, header = True)"
            ],
            "tag_pred": [
                "transfer_results"
            ],
            "correct_tag_ours": [
                "transfer_results"
            ],
            "headergen_tag": [
                "Data Preparation"
            ],
            "headergen_sot": [
                "Data Preparation"
            ]
        },
        {
            "notebook_name": "12-keras-nn-with-scaling-and-regularization",
            "content": [
                ""
            ],
            "content_processed": [],
            "tag_pred": [
                "None"
            ],
            "correct_tag_ours": [
                "None"
            ],
            "headergen_tag": [
                ""
            ],
            "headergen_sot": [
                ""
            ]
        }
    ]
}