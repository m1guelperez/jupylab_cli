{
    "source": [
        {
            "content": [
                "# This Python 3 environment comes with many helpful analytics libraries installed",
                "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python",
                "# For example, here's several helpful packages to load",
                "",
                "import numpy as np # linear algebra",
                "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)",
                "",
                "# Input data files are available in the read-only \"../input/\" directory",
                "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory",
                "",
                "import os",
                "for dirname, _, filenames in os.walk('/kaggle/input'):",
                "    for filename in filenames:",
                "        print(os.path.join(dirname, filename))",
                "",
                "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" ",
                "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
            ],
            "content_processed": [
                "SETUP",
                "CHECKPOINT",
                "for dirname, _, filenames in os.walk('path'):",
                "for filename in filenames:",
                "print(print)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Library Loading"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "df = pd.read_csv('../input/competitive-data-science-predict-future-sales/sales_train.csv')",
                "sample = pd.read_csv('../input/competitive-data-science-predict-future-sales/sample_submission.csv')"
            ],
            "content_processed": [
                "ASSIGN = pd.read_csv('..path')",
                "ASSIGN = pd.read_csv('..path')"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "df.head()"
            ],
            "content_processed": [
                "df.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "sample.head()"
            ],
            "content_processed": [
                "sample.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items = pd.read_csv('../input/competitive-data-science-predict-future-sales/items.csv')",
                "items_category = pd.read_csv('../input/competitive-data-science-predict-future-sales/item_categories.csv')",
                "shops = pd.read_csv('../input/competitive-data-science-predict-future-sales/shops.csv')"
            ],
            "content_processed": [
                "ASSIGN = pd.read_csv('..path')",
                "ASSIGN = pd.read_csv('..path')",
                "ASSIGN = pd.read_csv('..path')"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items.head()"
            ],
            "content_processed": [
                "items.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "items.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items_category.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "items_category.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items.head(5)"
            ],
            "content_processed": [
                "items.head(5)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items = items.drop(columns = ['item_name','item_name'])"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN.drop(columns = ['item_name','item_name'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items_category.head()"
            ],
            "content_processed": [
                "items_category.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "shops.head()"
            ],
            "content_processed": [
                "shops.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "shops.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "shops.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "category = []",
                "for i in df['item_id']:",
                "    category.append(items['item_category_id'][i])"
            ],
            "content_processed": [
                "ASSIGN = []",
                "for i in df['item_id']:",
                "ASSIGN.append(items['item_category_id'][i])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "print(category[0:20])"
            ],
            "content_processed": [
                "CHECKPOINT",
                "print(print)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "items.iloc[22154,:]"
            ],
            "content_processed": [
                "items.iloc[22154,:]"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "df['item_category_id'] = category"
            ],
            "content_processed": [
                "df['item_category_id'] = category"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "df.head()"
            ],
            "content_processed": [
                "df.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data = df[df['item_cnt_day']<=50]"
            ],
            "content_processed": [
                "ASSIGN = df[df['item_cnt_day']<=50]"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data = data[data['item_cnt_day']>-3]"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN[ASSIGN['item_cnt_day']>-3]"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "data.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "df.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "df.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "len(data['item_cnt_day'].unique())"
            ],
            "content_processed": [
                "len(data['item_cnt_day'].unique())"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data_train = data.drop(columns = ['item_cnt_day','item_id','date'])"
            ],
            "content_processed": [
                "ASSIGN = data.drop(columns = ['item_cnt_day','item_id','date'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "target = data['item_cnt_day']"
            ],
            "content_processed": [
                "ASSIGN = data['item_cnt_day']"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "print(target.value_counts())"
            ],
            "content_processed": [
                "CHECKPOINT",
                "print(print)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "# temp = data.value_counts()",
                "# import matplotlib.pyplot as plt",
                "# plt.plot(temp[:])"
            ],
            "content_processed": [],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "data.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.head()"
            ],
            "content_processed": [
                "data.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.drop(columns = ['date','item_id'],inplace = True)"
            ],
            "content_processed": [
                "data.drop(columns = ['date','item_id'],inplace = True)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "date_block = []",
                "for i in data['date_block_num']:",
                "    date_block.append(i%12)",
                "        "
            ],
            "content_processed": [
                "ASSIGN = []",
                "for i in data['date_block_num']:",
                "ASSIGN.append(i%12)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data['date_block_engineered'] = date_block"
            ],
            "content_processed": [
                "data['date_block_engineered'] = date_block"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data['date_block_engineered'].unique()"
            ],
            "content_processed": [
                "data['date_block_engineered'].unique()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.drop(columns = ['date_block_num'],inplace = True)"
            ],
            "content_processed": [
                "data.drop(columns = ['date_block_num'],inplace = True)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.head()"
            ],
            "content_processed": [
                "data.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "import tensorflow.keras as keras"
            ],
            "content_processed": [
                "SETUP"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Library Loading"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "labels = data['item_cnt_day']"
            ],
            "content_processed": [
                "ASSIGN = data['item_cnt_day']"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "len(labels.unique())"
            ],
            "content_processed": [
                "len(labels.unique())"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "# labels = pd.get_dummies(labels)"
            ],
            "content_processed": [],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "labels.head()"
            ],
            "content_processed": [
                "labels.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "labels.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "labels.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.head()"
            ],
            "content_processed": [
                "data.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data = data.drop(columns = ['item_cnt_day'])"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN.drop(columns = ['item_cnt_day'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "data.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "labels.shape"
            ],
            "content_processed": [
                "CHECKPOINT",
                "labels.shape"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "label = labels.transpose()"
            ],
            "content_processed": [
                "ASSIGN = labels.transpose()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "keras.backend.clear_session()",
                "model = keras.models.Sequential([",
                "    keras.layers.Dense(3,input_dim = 2,activation = 'relu'),",
                "    keras.layers.Dense(1,activation = 'relu')",
                "])",
                "early = keras.callbacks.EarlyStopping(patience = 5)",
                "model_check = keras.callbacks.ModelCheckpoint('model.h5',save_best_only = True)",
                "model.compile(loss = 'mse',optimizer = 'adam',metrics = ['accuracy'])",
                ""
            ],
            "content_processed": [
                "keras.backend.clear_session()",
                "ASSIGN = keras.models.Sequential([",
                "keras.layers.Dense(3,input_dim = 2,activation = 'relu'),",
                "keras.layers.Dense(1,activation = 'relu')",
                "])",
                "ASSIGN = keras.callbacks.EarlyStopping(patience = 5)",
                "ASSIGN = keras.callbacks.ModelCheckpoint('model.h5',save_best_only = True)",
                "ASSIGN.compile(loss = 'mse',optimizer = 'adam',metrics = ['accuracy'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data.head()"
            ],
            "content_processed": [
                "data.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data_x = data.drop(columns = ['date_block_engineered','item_price'])"
            ],
            "content_processed": [
                "ASSIGN = data.drop(columns = ['date_block_engineered','item_price'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "data_x.head()"
            ],
            "content_processed": [
                "data_x.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "model.fit(data_x,labels,epochs = 500,validation_split = 0.2,callbacks = [early,model_check],batch_size = 64)"
            ],
            "content_processed": [
                "model.fit(data_x,labels,epochs = 500,validation_split = 0.2,callbacks = [early,model_check],batch_size = 64)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "test = pd.read_csv('../input/competitive-data-science-predict-future-sales/test.csv')"
            ],
            "content_processed": [
                "ASSIGN = pd.read_csv('..path')"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "item_category = []",
                "for i in test['item_id']:",
                "    item_category.append(items['item_category_id'][i])"
            ],
            "content_processed": [
                "ASSIGN = []",
                "for i in test['item_id']:",
                "ASSIGN.append(items['item_category_id'][i])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "test['item_category_id'] = item_category"
            ],
            "content_processed": [
                "test['item_category_id'] = item_category"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "test.head()"
            ],
            "content_processed": [
                "test.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "# df_sorted = df.sort_values(['item_id'])"
            ],
            "content_processed": [],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "# df_sorted.head()"
            ],
            "content_processed": [],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "test = test.drop(columns = ['ID','item_id'])"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN.drop(columns = ['ID','item_id'])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions = model.predict(test)"
            ],
            "content_processed": [
                "ASSIGN = model.predict(test)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Model Building and Training"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions = pd.DataFrame(predictions)"
            ],
            "content_processed": [
                "ASSIGN = pd.DataFrame(ASSIGN)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.head()"
            ],
            "content_processed": [
                "predictions.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "pred = []",
                "for i in predictions[0]:",
                "    pred.append(round(i))"
            ],
            "content_processed": [
                "ASSIGN = []",
                "for i in predictions[0]:",
                "ASSIGN.append(round(i))"
            ],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions['item_cnt_day'] = pred"
            ],
            "content_processed": [
                "predictions['item_cnt_day'] = pred"
            ],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.head()"
            ],
            "content_processed": [
                "predictions.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "test = pd.read_csv('../input/competitive-data-science-predict-future-sales/test.csv')"
            ],
            "content_processed": [
                "ASSIGN = pd.read_csv('..path')"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions['ID'] = test['ID']"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN"
            ],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.head()"
            ],
            "content_processed": [
                "predictions.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions = predictions.drop(columns = [0])"
            ],
            "content_processed": [
                "ASSIGN = ASSIGN.drop(columns = [0])"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Feature Engineering",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.head()"
            ],
            "content_processed": [
                "predictions.head()"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.to_csv('Submit_1.csv',index = False)"
            ],
            "content_processed": [
                "predictions.to_csv('Submit_1.csv',index = False)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.columns = ['item_cnt_month','ID']"
            ],
            "content_processed": [
                "predictions.columns = ['item_cnt_month','ID']"
            ],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        },
        {
            "content": [
                "predictions.to_csv('Submit_2.csv',index = False)"
            ],
            "content_processed": [
                "predictions.to_csv('Submit_2.csv',index = False)"
            ],
            "tag_pred": [],
            "headergen_tag": [
                "",
                "Data Preparation"
            ],
            "correct_tag": []
        },
        {
            "content": [
                ""
            ],
            "content_processed": [],
            "tag_pred": [],
            "headergen_tag": [
                ""
            ],
            "correct_tag": []
        }
    ]
}